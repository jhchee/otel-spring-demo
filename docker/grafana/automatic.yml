apiVersion: 1

datasources:
  - name: Prometheus
    uid: prom
    type: prometheus
    url: http://prometheus:9090
    access: proxy
    basicAuth: false
    editable: true
    jsonData:
      httpMethod: GET

  - name: Loki
    uid: loki
    type: loki
    url: http://loki:3100
    access: proxy
    basicAuth: false
    editable: true
    jsonData:
      maxLines: 1000

  - name: Tempo
    type: tempo
    uid: tempo
    url: http://tempo:3200
    access: proxy
    basicAuth: false
    editable: true
    jsonData:
      httpMethod: GET
#      tracesToLogsV2:
#        datasourceUid: 'loki'
#        spanStartTimeShift: '-1h'
#        spanEndTimeShift: '1h'
#        tags: [ 'job', 'instance', 'pod', 'namespace' ]
#        filterByTraceID: false
#        filterBySpanID: false
#        customQuery: true
#        query: 'method="$${__span.tags.method}"'
#      tracesToMetrics:
#        datasourceUid: 'prom'
#        spanStartTimeShift: '-1h'
#        spanEndTimeShift: '1h'
#        tags: [ { key: 'service.name', value: 'service' }, { key: 'job' } ]
#        queries:
#          - name: 'Sample query'
#            query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
#      tracesToProfiles:
#        datasourceUid: 'grafana-pyroscope-datasource'
#        tags: [ 'job', 'instance', 'pod', 'namespace' ]
#        profileTypeId: 'process_cpu:cpu:nanoseconds:cpu:nanoseconds'
#        customQuery: true
#        query: 'method="$${__span.tags.method}"'
      serviceMap:
        datasourceUid: 'prom'
#      nodeGraph:
#        enabled: true
#      search:
#        hide: false
#      traceQuery:
#        timeShiftEnabled: true
#        spanStartTimeShift: '-1h'
#        spanEndTimeShift: '1h'
#      spanBar:
#        type: 'Tag'
#        tag: 'http.path'
#      streamingEnabled:
#        search: true
